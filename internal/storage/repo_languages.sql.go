// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: repo_languages.sql

package storage

import (
	"context"
	"time"
)

const insertOrUpdateRepoLanguage = `-- name: InsertOrUpdateRepoLanguage :exec
INSERT INTO repo_languages (
  repo_id, hentet_dato, language, bytes
) VALUES (
  $1, $2, $3, $4
)
ON CONFLICT (repo_id, hentet_dato, language) DO UPDATE SET
  bytes = EXCLUDED.bytes
`

type InsertOrUpdateRepoLanguageParams struct {
	RepoID     int64
	HentetDato time.Time
	Language   string
	Bytes      int64
}

func (q *Queries) InsertOrUpdateRepoLanguage(ctx context.Context, arg InsertOrUpdateRepoLanguageParams) error {
	_, err := q.db.ExecContext(ctx, insertOrUpdateRepoLanguage,
		arg.RepoID,
		arg.HentetDato,
		arg.Language,
		arg.Bytes,
	)
	return err
}
